Test suite for arugment multiplication
===========================================

use python3 -m doctest -v ./tests/1-mul.txt
python3 -c 'print(__import__("1-mul").mul__doc__)'

>>> mul = __import__('1-mul').mul

------------------------
EXPECTED OUTPUT:
1.
	>>> mul(3, 4)
	12


	>>> mul(4, 3)
	12


2.
	>>> mul(3.0, 4)
	12.0


	>>> mul(4, 3.0)
	12.0

	>>> mul(3.0, 4.0)
	12.0


3.
	>>> mul("hello ", 3)
	'hello hello hello '

4.
	>>> mul(2, ['a', 'b'])
	['a', 'b', 'a', 'b']

5.
	>>> mul(2, ('a', 'b'))
	('a', 'b', 'a', 'b')

6.
	>>> mul(-2, 0.0)
	-0.0


ERROR HANDLING OUTPUT:
1.
	>>> mul("ab", "cd")
	Traceback (most recent call last):
		  ...
	TypeError: can't multiply sequence by non-int of type 'str'

2.
	>>> mul(2.0, ['a', 'b'])
	Traceback (most recent call last):
		  ...
	TypeError: can't multiply sequence by non-int of type 'float'

3.
	>>> mul(['a', 'b'], ['c', 'd'])
	Traceback (most recent call last):
		  ...
	TypeError: can't multiply sequence by non-int of type 'list'

4.
	>>> mul(['a', 'b'], "hello")
	Traceback (most recent call last):
		  ...
	TypeError: can't multiply sequence by non-int of type 'str'

5.
	>>> mul(('a', 'b'), "hello")
	Traceback (most recent call last):
		  ...
	TypeError: can't multiply sequence by non-int of type 'str'


6.
	>>> mul(('a', 'b'), ('a', 'b'))
	Traceback (most recent call last):
		  ...
	TypeError: can't multiply sequence by non-int of type 'tuple'


Tracebacks Variable and Int
	   >>> mul(foo, 2)
	   Traceback (most recent call last):
	   ...
	   NameError: name 'foo' is not defined


Tracebacks SynaxError Any
	   >>> mul( , 2)
	   Traceback (most recent call last):
	   ...
	   SyntaxError: invalid syntax


Tracebacks TypeError Dict and Int
	   >>> mul({"a":1, "b":[1, 2, 3]}, 2)
	   Traceback (most recent call last):
	   ...
	   TypeError: unsupported operand type(s) for *: 'dict' and 'int'


Tracebacks TypeError String and Float
	   >>> mul("a string", 2.1)
	   Traceback (most recent call last):
	   ...
	   TypeError: can't multiply sequence by non-int of type 'float'


Tracebacks TypeError	  String and String
	   >>> mul("coffee", "good")
	   Traceback (most recent call last):
	   ...
	   TypeError: can't multiply sequence by non-int of type 'str'


Tracebacks TypeError	  Tuple and None
	   >>> mul((2, 3), None)
	   Traceback (most recent call last):
	   ...
	   TypeError: can't multiply sequence by non-int of type 'NoneType'


Tracebacks TypeError	  List and None
	   >>> mul([2, 3], None)
	   Traceback (most recent call last):
	   ...
	   TypeError: can't multiply sequence by non-int of type 'NoneType'


Tracebacks TypeError	  Set and Int
	   >>> mul({1, 2, 3}, 3)
	   Traceback (most recent call last):
	   ...
	   TypeError: unsupported operand type(s) for *: 'set' and 'int'


Tracebacks TypeError   Float and None
	   >>> mul(2.0, None)
	   Traceback (most recent call last):
	   ...
	   TypeError: unsupported operand type(s) for *: 'float' and 'NoneType'



Tracebacks TypeError   Int and None
	   >>> mul(2, None)
	   Traceback (most recent call last):
	   ...
	   TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'


Tracebacks TypeError   None and None
	   >>> mul(None, None)
	   Traceback (most recent call last):
	   ...
	   TypeError: unsupported operand type(s) for *: 'NoneType' and 'NoneType'


Tracebacks TypeError   Int and Function
	   >>> mul(3, lambda x: x)
	   Traceback (most recent call last):
	   ...
	   TypeError: unsupported operand type(s) for *: 'int' and 'function'


Tracebacks TypeError Any.
	   >>> mul(1)
	   Traceback (most recent call last):
	   ...
	   TypeError: mul() missing 1 required positional argument: 'b'



Tracebacks TypeError Any.
	   >>> mul(1, 2, 3)
	   Traceback (most recent call last):
	   TypeError: mul() takes 2 positional arguments but 3 were given


TypeError   No args
	    >>> mul()
	    Traceback (most recent call last):
	    ...
	    TypeError: mul() missing 2 required positional arguments: 'a' and 'b'

Correct Usage	       Basic Int and Boolean
	>>> mul(2, False)
	0


Correct Usage	       Basic Boolean and Int
	>>> mul(True, 2)
	2


Correct Usage	       Basic Boolean and Boolean
	>>> mul(True, False)
	0

Correct Usage	       Basic Boolean and Boolean
	>>> mul(True, True)
	1


Correct Usage	       Basic Boolean and Boolean
	>>> mul(False, True)
	0


Correct Usage	       Basic Boolean and Boolean
	>>> mul(False, False)
	0


Correct Usage	 Basic	Negative Int and Int
	>>> mul(-1, 2)
	-2


Correct  Usage	 Basic	Int and Negative Int
	 >>> mul(1, -2)
	 -2

multiply sets
	 >>> mul({1,2}, 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: unsupported operand type(s) for *: 'set' and 'int'

multiple dictionaries
	 >>> mul({1:5,2:6}, 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: unsupported operand type(s) for *: 'dict' and 'int'

Correct Usage	    Edge	Large int and Large int
	>>> mul(1e10000, 1e10000)
	inf


Correct Usage	Edge	Infinity and Infinity
	>>> mul(float("inf"), float("inf"))
	inf


Correct Usage	 Edge	Int and Int
	>>> mul(1E+100, -3E+102)
	-2.9999999999999997e+202
